services:
  kafka-broker-1:
    ports:
      - "5021:5021"
    image: 'bitnami/kafka:latest'
    environment:
      KAFKA_1: kafka-broker-1
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-broker-1:9091,OUTSIDE://localhost:5021
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9091,OUTSIDE://0.0.0.0:5021
    depends_on:
      - zookeeper
    networks:
      - "kafka-network"
  kafka-broker-2:
    ports:
      - "5022:5022"
    image: 'bitnami/kafka:latest'
    environment:
      KAFKA_2: kafka-broker-2
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-broker-2:9092,OUTSIDE://localhost:5022
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:5022
    depends_on:
      - zookeeper
    networks:
      - "kafka-network"
  kafka-broker-3:
    ports:
      - "5023:5023"
    image: 'bitnami/kafka:latest'
    environment:
      KAFKA_3: kafka-broker-3
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-broker-3:9093,OUTSIDE://localhost:5023
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:5023
    depends_on:
      - zookeeper
    networks:
      - "kafka-network"
  zookeeper:
    image: "confluentinc/cp-zookeeper"
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - "kafka-network"
  mongodb:
    image: "mongodb/mongodb-community-server:latest"
    ports:
      - "27017:27017"
    networks:
      - "kafka-network"
  kafka-consumer:
    build: .
    command: nodemon ./src/messaging/kafkaConsumer.ts
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - mongodb
    networks:
      - "kafka-network"
    restart: always
  dlq-kafka-consumer:
    build: .
    command: nodemon ./src/messaging/kafkaDLQConsumer.ts
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    networks:
      - "kafka-network"
    restart: always
networks:
  kafka-network:
